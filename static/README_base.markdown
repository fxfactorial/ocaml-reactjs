ReactJS bindings in OCaml
=========================

These are my bindings to ReactJS, by my count this is the global sixth
attempt at binding to React and my own second attempt, its kind of
hard.

Installation
============

Right now you can install with:

```shell
$ opam install reactjs
```

To get the development version, do:

```shell
$ opam pin add -y reactjs https://github.com/fxfactorial/ocaml-reactjs
```

The bindings should work on `node` or in the browser, both will assume
that `React`, and `ReactDOM` exist (on node they will do the
appropriate `require`, node side will also try to load the npm package
`react-dom`)

Contributing
============

Contributions of any kind are appreciated. If you're updating this
readme, then be update `static/README_base.markdown` and then run
`make readme`. 

For the source code itself, be aware that it uses some more advanced
features of the type system and can be mental pain. I haven't exposed
everything of `React` yet, and the library can still be made more
strongly typed. 

Right now a `JSX` like ppx is needed since writing out the `Text`,
`Elem` GADTs can be more strain on the brain and `JSX` lets you see
the structure of the element you're making more easily.

Examples
========

These examples should be familiar and are autogenerated into this
README from under the `reactjs_based_examples` dir.

Check the wiki for common FAQs, compile any example with:

```shell
$ ocamlfind ocamlc -package reactjs -linkpkg code.ml
$ js_of_ocaml a.out -o code.js
```

Also see
[ocaml-mailing-list](https://github.com/fxfactorial/ocaml-mailing-list)
for more example source code, include how to render on the server with
`nodejs`.

[//]: # "Do not write anything below here, the code examples will be appended"
